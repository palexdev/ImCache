/*
 * Copyright (C) 2025 Parisi Alessandro - alessandro.parisi406@gmail.com
 * This file is part of ImCache (https://github.com/palexdev/imcache)
 *
 * ImCache is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation; either version 3 of the License,
 * or (at your option) any later version.
 *
 * ImCache is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with ImCache. If not, see <http://www.gnu.org/licenses/>.
 */

plugins {
    id 'java-library'
    id 'org.openjfx.javafxplugin' version "$jfxPlugin"
    id 'com.vanniktech.maven.publish' version "$mavenPublish"
}

group = 'io.github.palexdev'
version = "$imcache"

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform("org.junit:junit-bom:$junit")
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"
    testImplementation "org.awaitility:awaitility:$awaitility"
    testImplementation "commons-io:commons-io:$apacheio"
    testImplementation "org.testfx:testfx-core:$testfx"
    testImplementation "org.testfx:testfx-junit5:$testfx"
}

java {
    sourceCompatibility = "$jdk"
    targetCompatibility = "$jdk"
    withSourcesJar()
    withJavadocJar()
    tasks.withType(Jar).each { it.archiveBaseName.set("imcache") }
}

javafx {
    version = "$jfx"
    configurations = ['testImplementation']
    modules = ['javafx.controls', 'javafx.swing']
}

test {
    useJUnitPlatform()
    // Because the new TestFX is garbage :)
    jvmArgs += [
        '--add-opens', 'javafx.graphics/com.sun.javafx.application=ALL-UNNAMED'
    ]
}

configurations {
    // Remove vanniktech nonsense
    gradle.taskGraph.whenReady { graph ->
        if (graph.hasTask(plainJavadocJar)) {
            plainJavadocJar.enabled = false
        }
    }
}

mavenPublishing {
    publishToMavenCentral()
    signAllPublications()
}